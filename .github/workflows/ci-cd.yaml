name: CI/CD to EC2

on:
  push:
    branches:
      - master

jobs:
  build:
    name: Build frontend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Build frontend
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          include-hidden-files: true
          path: |
            dist/
            package.json
            package-lock.json

  test:
    name: Test frontend
    runs-on: ubuntu-latest
    needs: [build]

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: frontend-dist
          path: frontend-dist

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci
        working-directory: frontend-dist

      - name: Run tests
        run: |
          npm run test
        working-directory: frontend-dist

  deploy-to-ec2:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    needs: [build, test]

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: frontend-dist
          path: frontend-dist

      - name: SCP to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_INSTANCE_DNS }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.SSH_KEY }}
          source: |
            frontend-dist/**
          target: ${{ secrets.PROD_APP_DIR }}
          rm: true

      - name: Restart portfolio-frontend service
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_INSTANCE_DNS }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            mv ${{ secrets.PROD_APP_DIR }}/frontend-dist temp
            rm -rf ${{ secrets.PROD_APP_DIR }}
            mv temp ${{ secrets.PROD_APP_DIR }}
            cd ${{ secrets.PROD_APP_DIR }}
            npm ci --omit=dev
            pm2 restart portfolio-frontend || pm2 serve ${{ secrets.PROD_APP_DIR }}/dist 3001 --name "portfolio-frontend"
            pm2 save
